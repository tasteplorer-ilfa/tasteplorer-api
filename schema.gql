# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ArticleDto {
  """Article Created At"""
  createdAt: String!

  """Article Deleted At"""
  deletedAt: Date

  """Article Description"""
  description: String!

  """Article ID"""
  id: ID!

  """Article Image"""
  imageUrl: String!

  """Article Title"""
  title: String!

  """Article Updated At"""
  updatedAt: String!
}

type ArticleListDto {
  """Article List Data"""
  articles: [ArticleDto!]!

  """Article Metadata"""
  meta: MetaData!
}

type AuthPayload {
  """Token authorization"""
  token: String!

  """User object"""
  user: UserDto!
}

type BannerDto {
  """Banner Created At"""
  createdAt: String!

  """Banner Deleted At"""
  deletedAt: Date

  """Banner ID"""
  id: ID!

  """Banner Image"""
  image: String!

  """Banner Title"""
  title: String!

  """Banner Updated At"""
  updatedAt: String!
}

type BannerListDto {
  """Banner List Data"""
  banners: [BannerDto!]!

  """Banner Metadata"""
  meta: MetaData!
}

type CloudinaryResponseDto {
  """The image url of the image that already success uploaded to cloudinary"""
  imageUrl: String!

  """The status of sucessfully upload image to cloudinary"""
  isSuccess: Boolean!
}

"""Date custom scalar type"""
scalar Date

"""Folders in Cloudinary where images can be uploaded"""
enum EnumFolder {
  ARTICLE
  BANNER
  RECIPE
}

"""Enum service which storage service that will be used"""
enum EnumService {
  Cloudinary
  S3Storage
  Web3Storage
}

input LoginInput {
  """User Password"""
  password: String!

  """Username Field"""
  username: String!
}

type MetaData {
  """current page of a list data"""
  currentPage: Int!

  """page size of a list data"""
  pageSize: Int!

  """total data of list data"""
  total: Int!

  """total page of a list data"""
  totalPage: Int!
}

type Mutation {
  createRecipe(input: RecipeInput!): RecipeDto!
  followUser(followerId: Int!, followingId: Int!): Boolean!
  login(input: LoginInput!): AuthPayload!
  register(input: UserRegisterInput!): AuthPayload!
  removeRecipe(id: Int!): String!
  unfollowUser(followerId: Int!, followingId: Int!): Boolean!
  updateRecipe(id: ID!, input: RecipeInput!): RecipeDto!
  updateUser(id: ID!, input: UpdateUserInput!): UserDto!
  uploadSingleFile(file: Upload!, setting: UploadParamInput!): CloudinaryResponseDto!
}

type ProfileDTO {
  """User Birthdate"""
  birthDate: Date!

  """User Created At"""
  createdAt: String!

  """User Deleted At"""
  deletedAt: Date

  """User Email"""
  email: String!

  """List of followers"""
  followers: UserFollowListData

  """List of following users"""
  following: UserFollowListData!

  """User Fullname"""
  fullname: String

  """User ID"""
  id: ID!

  """User Image"""
  image: String

  """User Updated At"""
  updatedAt: String!

  """Username"""
  username: String!
}

type Query {
  articleDetail(id: Int!): ArticleDto!
  articleList(page: Float!, pageSize: Float!): ArticleListDto!
  bannerDetail(id: Int!): BannerDto!
  bannerList(page: Int!, pageSize: Int!): BannerListDto!
  currentUser: ProfileDTO!
  myRecipeDetail(id: Int!): RecipeDto!
  myRecipeList(page: Int!, pageSize: Int!): RecipeListDataDto!
  recipeDetail(id: Int!): RecipeDto!
  recipeList(page: Int!, pageSize: Int!): RecipeListDataDto!
  userProfile(id: ID!): ProfileDTO!
}

type RecipeDto {
  """Recipe Author Detail"""
  author: UserDto!

  """Recipe Cooking Time"""
  cookingTime: String!

  """Recipe Created At"""
  createdAt: String!

  """Recipe Deleted At"""
  deletedAt: Date

  """Recipe Description"""
  description: String

  """Recipe ID"""
  id: ID!

  """Recipe Media Detail"""
  image: RecipeMediaDto!

  """Recipe Ingredient List"""
  ingredients: [RecipeIngredientDto!]!

  """Recipe Instruction List"""
  instructions: [RecipeInstructionDto!]!

  """Is A Favorite Recipe"""
  isFavorite: Boolean

  """Recipe Servings"""
  servings: String!

  """Recipe Title"""
  title: String!

  """Recipe Updated At"""
  updatedAt: String!
}

type RecipeIngredientDto {
  """Recipe Ingredient Created At"""
  createdAt: String!

  """Recipe Ingredient Deleted At"""
  deletedAt: Date

  """Recipe Ingredient ID"""
  id: ID!

  """Recipe Ingredient"""
  ingredient: String!

  """Recipe Ingredient Recipe ID"""
  recipeId: Int!

  """Recipe Ingredient Updated At"""
  updatedAt: String!
}

input RecipeInput {
  """The recipe cooking time"""
  cookingTime: String!

  """The recipe description"""
  description: String!

  """The recipe image"""
  image: String!

  """The recipe ingredients"""
  ingredients: [String!]!

  """The recipe instructions"""
  instructions: [String!]!

  """The recipe servings"""
  servings: String!

  """The recipe title"""
  title: String!
}

type RecipeInstructionDto {
  """Recipe Instruction Created At"""
  createdAt: String!

  """Recipe Instruction Deleted At"""
  deletedAt: Date

  """Recipe Instruction ID"""
  id: ID!

  """Recipe Instruction"""
  instruction: String!

  """Recipe Instruction Recipe ID"""
  recipeId: Int!

  """Recipe Instruction Updated At"""
  updatedAt: String!
}

type RecipeListDataDto {
  """Recipe List Metadata"""
  meta: MetaData!

  """List of Recipes"""
  recipes: [RecipeDto!]!
}

type RecipeMediaDto {
  """Recipe Media Created At"""
  createdAt: String!

  """Recipe Media Deleted At"""
  deletedAt: Date

  """Recipe Media ID"""
  id: ID!

  """Recipe Media Recipe ID"""
  recipeId: Int!

  """Recipe Media Updated At"""
  updatedAt: String!

  """Recipe Media Url"""
  url: String!
}

input UpdateUserInput {
  """User BirthDate Field"""
  birthDate: String!

  """User Email Field"""
  email: String

  """User Fullname Field"""
  fullname: String

  """User Image Field"""
  image: String

  """Username Field"""
  username: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UploadParamInput {
  folder: EnumFolder!
  uploadService: EnumService!
}

type UserDto {
  """User Birthdate"""
  birthDate: Date!

  """User Created At"""
  createdAt: String!

  """User Deleted At"""
  deletedAt: Date

  """User Email"""
  email: String!

  """User Fullname"""
  fullname: String

  """User ID"""
  id: ID!

  """User Image"""
  image: String

  """User Updated At"""
  updatedAt: String!

  """Username"""
  username: String!
}

type UserFollowDTO {
  """User ID"""
  id: ID!

  """User Image"""
  image: String

  """Username"""
  username: String!
}

type UserFollowListData {
  """Users Follow data"""
  data: [UserFollowDTO!]!

  """Total of users"""
  total: Int!
}

input UserRegisterInput {
  """User BirthDate Field"""
  birthDate: String!

  """User Email Field"""
  email: String!

  """User Fullname Field"""
  fullname: String!

  """User Image Field"""
  image: String

  """User Password Field"""
  password: String!

  """Username Field"""
  username: String!
}